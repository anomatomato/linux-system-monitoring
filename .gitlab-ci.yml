stages:
  - build-docker
  - build
  - run

build-docker-job:
  stage: build-docker
  tags:
    - dind
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker info
  script:
    - echo "Building Docker image"
    - docker build -t $CI_REGISTRY_IMAGE/debian:latest .
    - echo "Pushing Docker image"
    - docker push $CI_REGISTRY_IMAGE/debian:latest
  rules:
    - changes:
        - Dockerfile

build:
  stage: build
  image: $CI_REGISTRY_IMAGE/debian:latest
  when: on_success
  allow_failure: false
  script:
    - mkdir -p build && cd build
    - cmake ..
    - make
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  rules:
    - changes:
        - CMakeLists.txt
        - src/
        - include/
        - .gitlab-ci.yml
        - Dockerfile

test_inotify_coredump:
  stage: run
  image: $CI_REGISTRY_IMAGE/debian:latest
  allow_failure: false
  dependencies:
    - build
  script:
    - systemctl start systemd-coredump
    - cd test/unit
    - ./inotify-coredump-test.sh
  # rules:
  #   - changes:
  #       - CMakeLists.txt
  #       - src/
  #       - include/
  #       - test/unit/
  #       - .gitlab-ci.yml
  #       - Dockerfile

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - build/
